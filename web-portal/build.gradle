/*
* Build file for Web Portal
*/
buildscript {
	project.ext {
		// Name has to be same as the rootProject name set in "settings.gradle"
         projectName = 'basic-web-portal'
         versionName = '0.0.1'
         dockerUserName = 'anilallewar'
         springBootVersion = '2.3.6.RELEASE'
         springGradlePlugInVersion = '1.0.10.RELEASE'
         swagger2version = '2.10.5'
  	}
	dependencies {
    	classpath "io.spring.gradle:dependency-management-plugin:${project.springGradlePlugInVersion}"
    	classpath "org.springframework.boot:spring-boot-gradle-plugin:${project.springBootVersion}"
  	}	
       
}

plugins {
	id 'application'
	id 'eclipse'
	id 'org.springframework.boot' version '2.3.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
 	id 'com.palantir.docker' version '0.22.2'
}

task createWrapper(type: Wrapper) {
    gradleVersion = '6.7'
}

application {
    mainClass = 'com.anilallewar.microservices.portal.PortalApplication'
}

version = "${project.versionName}"
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

// Spring cloud setup
ext {
  set('springCloudVersion', "Hoxton.SR8")
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}


dependencies {
    // Basic Spring boot with config client
    implementation('org.springframework.cloud:spring-cloud-starter-config')
    implementation("org.springframework.boot:spring-boot-starter-web")    
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    
    // Spring OAuth2 security
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure")
    
    // Eureka client
    implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    
    // Hsytrix dashboard
    implementation('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')
    implementation('org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard')
    implementation('org.springframework.cloud:spring-cloud-starter-netflix-turbine')
}

/*
* This task builds the docker image by copying the output of the "jar" gradle command
* and moving it to the temporary directory which is used as the staging directory 
* by the Palantir docker gradle plugin. 
*/
docker {
	 // Name and tag of the Docker image to reflect the project artifacts
     name "${project.dockerUserName}/${project.projectName}:${project.versionName}"
     
     // Pick up Dockerfile from specific location
     dockerfile file('src/main/docker/Dockerfile')
     
     // Copy the run.sh and the output project jar file to the Docker context utilized by the Palantir plugin
     files "${project.buildDir}/resources/main/run.sh", tasks.jar.outputs
     
}

bootRun {
    jvmArgs = ['-Xdebug', '-Xrunjdwp:server=y,transport=dt_socket,address=4300,suspend=n','-Dspring.profiles.active=default']
}